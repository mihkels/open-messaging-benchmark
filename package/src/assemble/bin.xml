<!--

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<assembly
	xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
	<id>bin</id>
	<formats>
		<format>tar.gz</format>
	</formats>
	<includeBaseDirectory>true</includeBaseDirectory>

	<fileSets>
		<fileSet>
			<directory>${basedir}/../workloads</directory>
		</fileSet>
		<fileSet>
			<directory>${basedir}/../payload</directory>
		</fileSet>
		<fileSet>
			<directory>${basedir}/../bin</directory>
			<fileMode>755</fileMode>
		</fileSet>

		<fileSet>
			<directory>${basedir}/..</directory>

			<includes>
				<include>**/driver-*/deploy/**</include>
				<include>**/driver-*/*.yaml</include>
			</includes>

			<excludes>
				<exclude>**/.terraform/**</exclude>
				<exclude>**/terraform.tfstate</exclude>
				<exclude>**/terraform.tfstate.backup</exclude>
				<exclude>**/*.retry</exclude>
			</excludes>
		</fileSet>
	</fileSets>

	<files>
		<file>
			<source>${basedir}/../README.md</source>
			<outputDirectory>.</outputDirectory>
			<fileMode>644</fileMode>
		</file>
		<file>
			<source>${basedir}/../LICENSE</source>
			<destName>LICENSE</destName>
			<outputDirectory>.</outputDirectory>
			<fileMode>644</fileMode>
		</file>
	</files>

	<!-- Main lib with all non-isolated drivers -->
	<dependencySets>
		<dependencySet>
			<outputDirectory>lib</outputDirectory>
			<unpack>false</unpack>
			<scope>compile</scope>
			<useProjectArtifact>false</useProjectArtifact>
			<outputFileNameMapping>${artifact.groupId}-${artifact.artifactId}-${artifact.version}${dashClassifier?}.${artifact.extension}</outputFileNameMapping>

			<excludes>
				<!-- Exclude isolated drivers from main lib -->
				<exclude>io.openmessaging.benchmark:driver-pravega</exclude>
                <exclude>io.openmessaging.benchmark:driver-bookkeeper</exclude>
				<!-- Add more isolated drivers here -->
				<exclude>ch.qos.logback:*</exclude>
			</excludes>
		</dependencySet>
	</dependencySets>

	<!-- Package isolated drivers separately -->
	<moduleSets>
		<!-- Package isolated drivers jar -->
		<moduleSet>
			<useAllReactorProjects>true</useAllReactorProjects>
			<includes>
				<include>io.openmessaging.benchmark:driver-pravega</include>
                <include>io.openmessaging.benchmark:driver-bookkeeper</include>
			</includes>
			<binaries>
				<outputDirectory>drivers/${module.artifactId}</outputDirectory>
				<unpack>false</unpack>
				<includeDependencies>false</includeDependencies>
			</binaries>
		</moduleSet>

		<!-- Package isolated drivers dependencies from target/lib -->
		<moduleSet>
			<useAllReactorProjects>true</useAllReactorProjects>
			<includes>
				<include>io.openmessaging.benchmark:driver-pravega</include>
                <include>io.openmessaging.benchmark:driver-bookkeeper</include>
			</includes>
			<sources>
				<includeModuleDirectory>false</includeModuleDirectory>
				<fileSets>
					<fileSet>
						<directory>target/lib</directory>
						<outputDirectory>drivers/${module.artifactId}/lib</outputDirectory>
						<includes>
							<include>*.jar</include>
						</includes>
					</fileSet>
				</fileSets>
			</sources>
		</moduleSet>
	</moduleSets>

</assembly>
